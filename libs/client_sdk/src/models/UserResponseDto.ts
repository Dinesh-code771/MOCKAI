/* tslint:disable */
/* eslint-disable */
/**
 * mockAI
 * The Node based REST API documentation for mockAI
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RoleDto } from './RoleDto';
import {
    RoleDtoFromJSON,
    RoleDtoFromJSONTyped,
    RoleDtoToJSON,
} from './RoleDto';

/**
 * 
 * @export
 * @interface UserResponseDto
 */
export interface UserResponseDto {
    /**
     * 
     * @type {string}
     * @memberof UserResponseDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof UserResponseDto
     */
    full_name?: string;
    /**
     * 
     * @type {string}
     * @memberof UserResponseDto
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof UserResponseDto
     */
    phone_number?: string;
    /**
     * 
     * @type {Array<RoleDto>}
     * @memberof UserResponseDto
     */
    roles: Array<RoleDto>;
    /**
     * Whether the user account is disabled
     * @type {boolean}
     * @memberof UserResponseDto
     */
    is_disabled?: boolean;
}

/**
 * Check if a given object implements the UserResponseDto interface.
 */
export function instanceOfUserResponseDto(value: object): value is UserResponseDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('roles' in value) || value['roles'] === undefined) return false;
    return true;
}

export function UserResponseDtoFromJSON(json: any): UserResponseDto {
    return UserResponseDtoFromJSONTyped(json, false);
}

export function UserResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'full_name': json['full_name'] == null ? undefined : json['full_name'],
        'email': json['email'],
        'phone_number': json['phone_number'] == null ? undefined : json['phone_number'],
        'roles': ((json['roles'] as Array<any>).map(RoleDtoFromJSON)),
        'is_disabled': json['is_disabled'] == null ? undefined : json['is_disabled'],
    };
}

export function UserResponseDtoToJSON(value?: UserResponseDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'full_name': value['full_name'],
        'email': value['email'],
        'phone_number': value['phone_number'],
        'roles': ((value['roles'] as Array<any>).map(RoleDtoToJSON)),
        'is_disabled': value['is_disabled'],
    };
}

