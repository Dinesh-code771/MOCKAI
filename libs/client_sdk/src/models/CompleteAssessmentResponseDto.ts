/* tslint:disable */
/* eslint-disable */
/**
 * mockAI
 * The Node based REST API documentation for mockAI
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AssessmentDetailsDto } from './AssessmentDetailsDto';
import {
    AssessmentDetailsDtoFromJSON,
    AssessmentDetailsDtoFromJSONTyped,
    AssessmentDetailsDtoToJSON,
} from './AssessmentDetailsDto';
import type { QuestionWithAnswersDto } from './QuestionWithAnswersDto';
import {
    QuestionWithAnswersDtoFromJSON,
    QuestionWithAnswersDtoFromJSONTyped,
    QuestionWithAnswersDtoToJSON,
} from './QuestionWithAnswersDto';

/**
 * 
 * @export
 * @interface CompleteAssessmentResponseDto
 */
export interface CompleteAssessmentResponseDto {
    /**
     * User Assessment ID
     * @type {string}
     * @memberof CompleteAssessmentResponseDto
     */
    id: string;
    /**
     * User ID
     * @type {string}
     * @memberof CompleteAssessmentResponseDto
     */
    user_id: string;
    /**
     * Assessment ID
     * @type {string}
     * @memberof CompleteAssessmentResponseDto
     */
    assessment_id: string;
    /**
     * Scheduled time
     * @type {string}
     * @memberof CompleteAssessmentResponseDto
     */
    scheduled_at: string;
    /**
     * Started time
     * @type {string}
     * @memberof CompleteAssessmentResponseDto
     */
    started_at?: string;
    /**
     * Assessment status
     * @type {string}
     * @memberof CompleteAssessmentResponseDto
     */
    status: CompleteAssessmentResponseDtoStatusEnum;
    /**
     * Total score
     * @type {number}
     * @memberof CompleteAssessmentResponseDto
     */
    total_score: number;
    /**
     * Percentage score
     * @type {number}
     * @memberof CompleteAssessmentResponseDto
     */
    percentage_score: number;
    /**
     * Assessment details
     * @type {AssessmentDetailsDto}
     * @memberof CompleteAssessmentResponseDto
     */
    assessment: AssessmentDetailsDto;
    /**
     * Questions in the assessment
     * @type {Array<QuestionWithAnswersDto>}
     * @memberof CompleteAssessmentResponseDto
     */
    questions: Array<QuestionWithAnswersDto>;
}


/**
 * @export
 */
export const CompleteAssessmentResponseDtoStatusEnum = {
    Scheduled: 'scheduled',
    InProgress: 'in_progress',
    Completed: 'completed',
    Cancelled: 'cancelled',
    NoShow: 'no_show'
} as const;
export type CompleteAssessmentResponseDtoStatusEnum = typeof CompleteAssessmentResponseDtoStatusEnum[keyof typeof CompleteAssessmentResponseDtoStatusEnum];


/**
 * Check if a given object implements the CompleteAssessmentResponseDto interface.
 */
export function instanceOfCompleteAssessmentResponseDto(value: object): value is CompleteAssessmentResponseDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('user_id' in value) || value['user_id'] === undefined) return false;
    if (!('assessment_id' in value) || value['assessment_id'] === undefined) return false;
    if (!('scheduled_at' in value) || value['scheduled_at'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('total_score' in value) || value['total_score'] === undefined) return false;
    if (!('percentage_score' in value) || value['percentage_score'] === undefined) return false;
    if (!('assessment' in value) || value['assessment'] === undefined) return false;
    if (!('questions' in value) || value['questions'] === undefined) return false;
    return true;
}

export function CompleteAssessmentResponseDtoFromJSON(json: any): CompleteAssessmentResponseDto {
    return CompleteAssessmentResponseDtoFromJSONTyped(json, false);
}

export function CompleteAssessmentResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompleteAssessmentResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'user_id': json['user_id'],
        'assessment_id': json['assessment_id'],
        'scheduled_at': json['scheduled_at'],
        'started_at': json['started_at'] == null ? undefined : json['started_at'],
        'status': json['status'],
        'total_score': json['total_score'],
        'percentage_score': json['percentage_score'],
        'assessment': AssessmentDetailsDtoFromJSON(json['assessment']),
        'questions': ((json['questions'] as Array<any>).map(QuestionWithAnswersDtoFromJSON)),
    };
}

export function CompleteAssessmentResponseDtoToJSON(value?: CompleteAssessmentResponseDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'user_id': value['user_id'],
        'assessment_id': value['assessment_id'],
        'scheduled_at': value['scheduled_at'],
        'started_at': value['started_at'],
        'status': value['status'],
        'total_score': value['total_score'],
        'percentage_score': value['percentage_score'],
        'assessment': AssessmentDetailsDtoToJSON(value['assessment']),
        'questions': ((value['questions'] as Array<any>).map(QuestionWithAnswersDtoToJSON)),
    };
}

