/* tslint:disable */
/* eslint-disable */
/**
 * mockAI
 * The Node based REST API documentation for mockAI
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HealthControllerCheck200Response,
  HealthControllerCheck503Response,
} from '../models/index';
import {
    HealthControllerCheck200ResponseFromJSON,
    HealthControllerCheck200ResponseToJSON,
    HealthControllerCheck503ResponseFromJSON,
    HealthControllerCheck503ResponseToJSON,
} from '../models/index';

/**
 * 
 */
export class HealthApi extends runtime.BaseAPI {

    /**
     * Health check endpoint
     * Check the health of the service
     */
    async healthControllerCheckRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HealthControllerCheck200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/health`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => HealthControllerCheck200ResponseFromJSON(jsonValue));
    }

    /**
     * Health check endpoint
     * Check the health of the service
     */
    async healthControllerCheck(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HealthControllerCheck200Response> {
        const response = await this.healthControllerCheckRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async healthControllerShowHealthRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/health/health-ui`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async healthControllerShowHealth(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.healthControllerShowHealthRaw(initOverrides);
    }

}
